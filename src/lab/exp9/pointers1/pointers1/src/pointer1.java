/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * factorial.java
 *
 * Created on 26 Sep, 2010, 10:09:46 PM
 */

/**
 *,
 * @author rvk
 */
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import java.net.*;
import javax.swing.text.Highlighter;
import javax.swing.text.DefaultHighlighter;


public class pointer1 extends javax.swing.JApplet {

    int program;
    String code[] =  {"#include<stdio.h>","void main(){","       int A = 5, B = 9;","       printf('Value of A is %d\n',A); ","       printf('Value of B is %d\n',B); ","       swap( &A , &B );","       printf('Value of A after swapping is %d\n',A); ","       printf('Value of B after swapping is %d\n',B); ","}","","void swap( int *Pa , int *Pb){","       int temp = *Pa;","       *Pa = *Pb;","       *Pb = temp;",
    "}"};
    int[] codeLength1 = new int[100];
    int[] codeLength2 = new int[100];
    int count;
    Highlighter h;



    /** Initializes the applet factorial */
    public void init() {
        count = 0;
        for(int i = 0; i<code.length ; i++ ){
            if(i==0)
                codeLength1[i] = 0;
            else
                codeLength1[i] = codeLength2[i-1] + 1;

            codeLength2[i] = codeLength1[i] + code[i].length();

        }
        try {
            java.awt.EventQueue.invokeAndWait(new Runnable() {
                public void run() {
                    initComponents();
                }
            });
        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }

    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        topPanel = new javax.swing.JPanel();
        header = new java.awt.Label();
        outputscrollpane = new javax.swing.JScrollPane();
        outputvis1 = new outputvis();
        progType = new javax.swing.JComboBox();
        backButton = new javax.swing.JButton();
        nextButton = new javax.swing.JButton();
        progcodeLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        progoutputPanel = new javax.swing.JTextPane();
        progoutputLabel = new javax.swing.JLabel();
        explanationLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        explPanel = new javax.swing.JTextPane();
        programLabel = new javax.swing.JLabel();

        topPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        header.setAlignment(java.awt.Label.CENTER);
        header.setFont(new java.awt.Font("SansSerif", 1, 18));
        header.setText("POINTERS LEARNING LABS");

        javax.swing.GroupLayout topPanelLayout = new javax.swing.GroupLayout(topPanel);
        topPanel.setLayout(topPanelLayout);
        topPanelLayout.setHorizontalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addGap(213, 213, 213)
                .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, 545, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(263, Short.MAX_VALUE))
        );
        topPanelLayout.setVerticalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(header, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
        );

        outputscrollpane.setPreferredSize(new java.awt.Dimension(560, 470));

        javax.swing.GroupLayout outputvis1Layout = new javax.swing.GroupLayout(outputvis1);
        outputvis1.setLayout(outputvis1Layout);
        outputvis1Layout.setHorizontalGroup(
            outputvis1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 449, Short.MAX_VALUE)
        );
        outputvis1Layout.setVerticalGroup(
            outputvis1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 410, Short.MAX_VALUE)
        );

        outputscrollpane.setViewportView(outputvis1);

        progType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Call-By-Reference example", "Basic Pointers", " " }));

        backButton.setFont(new java.awt.Font("DejaVu Sans", 0, 12));
        backButton.setText("BACK");
        backButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        backButton.setEnabled(false);
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        nextButton.setFont(new java.awt.Font("DejaVu Sans", 0, 12));
        nextButton.setText("NEXT");
        nextButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        progcodeLabel.setFont(new java.awt.Font("DejaVu Sans", 1, 12));
        progcodeLabel.setText("PROGRAM CODE :");

        jEditorPane1.setEditable(false);
        jEditorPane1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jEditorPane1.setText("#include<stdio.h>\nvoid main(){\n       int A = 5, B = 9;\n       printf(\"Value of A is %d\\n\",A);\n       printf(\"Value of B is %d\\n\",B);\n       swap( &A , &B );\n       printf(\"Value of A after swapping is %d\\n\",A);\n       printf(\"Value of B after swapping is %d\\n\",B);\n}\n\nvoid swap( int *Pa , int *Pb){\n       int temp = *Pa;\n       *Pa = *Pb;\n       *Pb = temp;\n}");
        jEditorPane1.setAutoscrolls(true);
        jScrollPane1.setViewportView(jEditorPane1);
        h = jEditorPane1.getHighlighter();

        progoutputPanel.setBackground(new java.awt.Color(6, 4, 4));
        progoutputPanel.setForeground(new java.awt.Color(254, 254, 254));
        jScrollPane2.setViewportView(progoutputPanel);

        progoutputLabel.setFont(new java.awt.Font("DejaVu Sans", 1, 12));
        progoutputLabel.setText("PROGRAM OUTPUT :");

        explanationLabel.setFont(new java.awt.Font("DejaVu Sans", 1, 12));
        explanationLabel.setText("EXPLANATION :");

        explPanel.setBackground(new java.awt.Color(174, 150, 150));
        jScrollPane3.setViewportView(explPanel);

        programLabel.setFont(new java.awt.Font("DejaVu Sans", 1, 12));
        programLabel.setText("PROGRAM :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(progcodeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 144, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(programLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(progType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(142, 142, 142)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 556, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(progoutputLabel)
                        .addGap(347, 347, 347)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(explanationLabel))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 451, Short.MAX_VALUE)
                    .addComponent(outputscrollpane, 0, 0, Short.MAX_VALUE)))
            .addComponent(topPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(topPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(programLabel)
                                    .addComponent(progType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(progcodeLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(backButton)
                                    .addComponent(nextButton))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(progoutputLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(outputscrollpane, 0, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(explanationLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        if(count == 9){
            nextButton.setEnabled(true);
        }
        if(count == 7){
            count = 16;
        }
        if(count == 6){
            count = 15;
        }
        if(count == 11){
            count = 6;
        }
        count-=2;


        nextButton.doClick();
        if(count<=0)
            backButton.setEnabled(false);

    }//GEN-LAST:event_backButtonActionPerformed

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        // TODO add your handling code here:

        if(count>=0){
            try{
              h.removeAllHighlights();
              h.addHighlight(codeLength1[count], codeLength2[count] , new DefaultHighlighter.DefaultHighlightPainter(Color.LIGHT_GRAY));
           
            }
            catch (javax.swing.text.BadLocationException e){
            
            }
        }
        if(count == 8){
            nextButton.setEnabled(false);
        }
        int flag = 0;
        switch(count){
           case 0:
                explPanel.setText("This program demonstrates the use of pointers in call-by-reference method ");
                progoutputPanel.setText("");
                break;
           case 1:
                explPanel.setText("");
                progoutputPanel.setText("");
                break;
           case 2:
                explPanel.setText("Variables A and B are declared as integer types and assigned values 5 and 9 respectively.");
                break;
           case 3:
                explPanel.setText("Value stored in variable A is 5 which is displayed in the output.");
                progoutputPanel.setText("Value of A is 5");
                break;
           case 4:
                explPanel.setText("Value stored in variable B is 9 which is displayed in the output.");
                progoutputPanel.setText("Address of B is 9");
                break;
           case 5:
                explPanel.setText("The function 'swap' is called and addresses of A and B are passed as arguments.");
                progoutputPanel.setText("");
                count = 10;
                flag = 1;
                break;
           case 6:
                explPanel.setText("The New Value stored in variable A is 9 which is displayed in the output.");
                progoutputPanel.setText("Value of A after swapping is 9");
                break;
           case 7:
                explPanel.setText("The New Value stored in variable A is 9 which is displayed in the output.");
                progoutputPanel.setText("Value of B after swapping is 5");
                break;
           case 8:
                explPanel.setText("Program Execution Complete");
                progoutputPanel.setText("");
                break;
           case 9:
                explPanel.setText("");
                progoutputPanel.setText("");
                break;
           case 10:
                explPanel.setText("Function call. Local integer type pointer variables Pa and Pb get assigned the address of A and B respectively.");
                progoutputPanel.setText("");
                break;
           case 11:
                explPanel.setText("A local integer type variable 'temp' is declared and the value at address in Pa is assigned to it i.e. A's value is stored in temp.");
                progoutputPanel.setText("");
                break;
           case 12:
                explPanel.setText("Value at address in Pa is changed to the value at address in Pb i.e. B's value is now stored in A.");
                progoutputPanel.setText("");
                break;
           case 13:
                explPanel.setText("Value at addrss in Pb is changed to the value of temp i.e. temp is now stored in B.");
                progoutputPanel.setText("");                
                break;
            case 14:
                explPanel.setText("Function returns.");
                progoutputPanel.setText("");
                count = 5;
                break;
           default:
                break;

        }
        outputvis1.count = count;
        outputvis1.repaint();
        if(flag == 0){
            count++;
        }
        else{
            outputvis1.count = 5;
            outputvis1.repaint();
        }
        
        if(count>0){
            backButton.setEnabled(true);
        }
    }//GEN-LAST:event_nextButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JTextPane explPanel;
    private javax.swing.JLabel explanationLabel;
    private java.awt.Label header;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton nextButton;
    private javax.swing.JScrollPane outputscrollpane;
    private outputvis outputvis1;
    private javax.swing.JComboBox progType;
    private javax.swing.JLabel progcodeLabel;
    private javax.swing.JLabel progoutputLabel;
    private javax.swing.JTextPane progoutputPanel;
    private javax.swing.JLabel programLabel;
    private javax.swing.JPanel topPanel;
    // End of variables declaration//GEN-END:variables

}
