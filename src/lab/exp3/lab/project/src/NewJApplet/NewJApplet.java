/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NewJApplet.java
 *
 * Created on 29 Jul, 2010, 7:38:41 PM
 */
package NewJApplet;

import java.awt.Color;
import java.util.Arrays;
import javax.swing.AbstractButton;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyleContext;
import javax.swing.text.StyledDocument;

/**
 *
 * @author abhiramj
 */
public class NewJApplet extends javax.swing.JApplet {

    /** Initializes the applet NewJApplet */
    @Override
    public void init() {
        try {
            java.awt.EventQueue.invokeAndWait(new Runnable() {

                public void run() {
                    initComponents();
                }
            });
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane2 = new javax.swing.JTextPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jToggleButton1 = new javax.swing.JToggleButton();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jToggleButton2 = new javax.swing.JToggleButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel10.setVisible(false);
        jLabel11 = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("DejaVu Sans", 0, 18));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Loops");
        jLabel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel9.setFont(new java.awt.Font("DejaVu Sans", 1, 14));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Step Execution");
        jLabel9.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jScrollPane1.setDoubleBuffered(true);

        jTextPane1.setEditable(false);
        jScrollPane1.setViewportView(jTextPane1);

        jButton1.setText("Next");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                next_clicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                    .addComponent(jButton1))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 412, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1))
        );

        jLabel8.setFont(new java.awt.Font("DejaVu Sans", 1, 14));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Code Output");
        jLabel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
        );

        jTextArea2.setBackground(new java.awt.Color(254, 254, 254));
        jTextArea2.setColumns(20);
        jTextArea2.setEditable(false);
        jTextArea2.setForeground(new java.awt.Color(5, 148, 0));
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(5);
        jTextArea2.setWrapStyleWord(true);
        jScrollPane3.setViewportView(jTextArea2);

        jScrollPane2.setBackground(java.awt.SystemColor.activeCaptionBorder);

        jTextPane2.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.shadow"));
        jScrollPane2.setViewportView(jTextPane2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel2.setText("Enter P");

        jFormattedTextField1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("###0"))));
        jFormattedTextField1.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);

        jToggleButton1.setText(isCodeRunning());
        jToggleButton1.setActionCommand("Start");
        jToggleButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jToggleButton1MouseClicked(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "for", "while", "do-while" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Loop type");

        jToggleButton2.setText("Switch to Nested Loops");
        jToggleButton2.setToolTipText("");
        jToggleButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jToggleButton2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jToggleButton2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(8, 8, 8)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jToggleButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 238, Short.MAX_VALUE)
                .addComponent(jToggleButton2)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Initialize", jPanel1);

        jLabel4.setText("i       =");

        jLabel6.setText("fact  =");

        jLabel10.setText("k      =");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel5)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(221, 221, 221))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addContainerGap(356, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Local Variables", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 814, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 495, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jToggleButton1MouseClicked
        // TODO add your handling code here:

        // Start button has action handler here
        switch (this.progSel) {
            case 0:
                this.select = jComboBox1.getSelectedIndex();
                String s = jFormattedTextField1.getText().replace(" ", "");
                p = Integer.parseInt(s);

                System.out.println("In Start");

                this.program = new coderunner(select);
                this.program.setVars(p);
                switch (select) {

                    case 0:
                        this.initStyles = new String[disp.length];
                        this.initStyles[0] = "highlight";
                        Arrays.fill(this.initStyles, 1, initStyles.length, "regular");
                        break;
                    case 1:
                        this.initStyles = new String[disp2.length];
                        this.initStyles[0] = "highlight";
                        Arrays.fill(this.initStyles, 1, initStyles.length, "regular");
                        break;
                    case 2:
                        this.initStyles = new String[disp2.length];
                        this.initStyles[0] = "highlight";
                        Arrays.fill(this.initStyles, 1, initStyles.length, "regular");
                        break;


                }
                //MyTopJPanel.this.initStyles=replaceStr(initStyles);

                break;
            case 1:
                String l = jFormattedTextField1.getText().replace(" ", "");
                this.nested = new coderunner2(0);
                this.nested.height = Integer.parseInt(l);
                this.initStyles = new String[nestedLoop.length];
                this.initStyles[0] = "highlight";
                Arrays.fill(this.initStyles, 1, initStyles.length, "regular");
        }
        this.code_running = true;
        this.lPanelRefresh();
        this.cPanelRefresh();
        this.rPanelRefresh();
        if (jToggleButton1.getText().equalsIgnoreCase("Reset")) {
            jToggleButton1.setSelected(false);
            jToggleButton1.setText("Start");
        }
    }//GEN-LAST:event_jToggleButton1MouseClicked

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:



        System.out.println("In Action");
        if (evt.getActionCommand().equalsIgnoreCase("comboBoxChanged")) {
            JComboBox cb = (JComboBox) evt.getSource();
            this.select = cb.getSelectedIndex();
            System.out.println(select);

        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void next_clicked(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_next_clicked
        // TODO add your handling code here:
        switch (progSel) {
            case 0:
                this.initStyles = replaceStr(initStyles, program);
                break;
            case 1:
                this.initStyles = replaceStr(initStyles, nested);
        }

        if (evt.getActionCommand().equalsIgnoreCase("next")) {
            System.out.println("In Next");
            try {

                this.rPanelRefresh();
                this.lPanelRefresh();
                this.cPanelRefresh();

            } catch (Exception n) {
                code_running = false;
                System.out.println(n);
            }
            jToggleButton1.setText(isCodeRunning());

        }





    }//GEN-LAST:event_next_clicked

    private void jToggleButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jToggleButton2MouseClicked
        AbstractButton b = (AbstractButton) evt.getSource();
        if (progSel == 1) {
            progSel = 0;
            b.setText("Switch to nested loops");
            jLabel2.setText("Enter p");
            jComboBox1.setVisible(true);
            jComboBox1.setSelectedIndex(0);
        } else if (progSel == 0) {
            progSel = 1;

            this.select = 0;
            jLabel2.setText("Enter height of pyramid");
            b.setText("Switch to simple loops");
            jComboBox1.setVisible(false);
        }

    }//GEN-LAST:event_jToggleButton2MouseClicked
    public String isCodeRunning() {
        if (code_running == true) {
            return "Reset";

        } else {
            jToggleButton1.setSelected(false);
            return "Start";
        }
    }

    private String[] replaceStr(String[] initSt, Object programSel) {
        for (int i = 0; i < initSt.length; i++) {
            String st = initSt[i];
            int index;
            if (st.equals("highlight")) {
                index = i;
                initSt[i] = "regular";
                if (i >= initSt.length) {
                    break;
                }
                switch (progSel) {
                    case 0:
                        coderunner sp1 = (coderunner) programSel;
                        index = sp1.detnxtStmt(index, select);
                        break;
                    case 1:
                        coderunner2 sp2 = (coderunner2) programSel;
                        index = sp2.detnxtStmt(index, select);
                        break;
                }
                System.out.println("Index is" + index);
                if (index == -1) {
                    this.code_running = false;
                    System.out.println("done running on error or normal exit");
                    //System.out.println(program.fact);
                } else {
                    initSt[index] = "highlight";
                    break;
                }

            }
        }
        return initSt;
    }

    private void lPanelRefresh() {
        switch (progSel) {
            case 0:
                this.jLabel5.setText(Integer.toString(program.i));
                this.jLabel7.setText(Integer.toString(program.fact));
                this.jLabel10.setVisible(false);
                this.jLabel11.setVisible(false);
                
               
                break;
            case 1:
                this.jLabel4.setText("i   =");
                this.jLabel6.setText("j   =");
                this.jLabel10.setText("k   =");
                
                this.jLabel10.setVisible(true);
                this.jLabel11.setVisible(true);
               
                this.jLabel5.setText(Integer.toString(nested.i));
                this.jLabel7.setText(Integer.toString(nested.j));
                this.jLabel11.setText(Integer.toString(nested.k));
                
                break;
        }
    }

    private void cPanelRefresh() {

        switch (progSel) {
            case 0:
                if (program.currindex == 0) {
                    jTextPane2.setText("The following example calculates the factorial of a number. Notice that the loop(for/while/do-while)"
                            + "executes as long as loop condition is true. To end the execution of the loop we keep a counter so that after incrementing/decrementing the counter "
                            + "the number of times we want to run it, it eventually fails the test condition.");
                }
                if (program.i != 0) {
                    if ((program.loopEnd[0] - 1 == program.currindex && program.select == 0) || (program.loopEnd[0] - 2 == program.currindex && program.select != 0)) {
                        jTextPane2.setText(jTextPane2.getText() + "\n" + Integer.toString(program.fact / program.i) + "*" + Integer.toString(program.i) + "=" + Integer.toString(program.fact));
                        //output.setAlignmentX(CENTER_ALIGNMENT);
                    }

                }

                break;
            case 1:

                if (nested.currindex == 0) {
               jTextPane2.setText("This example shows that loops can also be put inside one another, i.e nested, this allows "
                            + "us to write more complicated programs. Here the task of printing a pyramid of stars is divided as follows"
                            + ". The topmost loop iterates through the rows of the pyramid, and the other 3 loops divide the task"
                            + " of painting left side spaces,stars and middle spaces, and right side spaces consecutively.\n");
                }
                //jTextArea1.append("\n");
                if (nested.currindex == 11 || nested.currindex == 14 ) {
//              
                    try {
                        // Get the text pane's document

                        DefaultStyledDocument doc = (DefaultStyledDocument) jTextPane2.getDocument();
                        Style style = doc.addStyle("StyleName", null);
                        StyleConstants.setIcon(style, asteric);
                        doc.insertString(doc.getEndPosition().getOffset(), "ignored text", style);
                        jTextPane2.setStyledDocument(doc);
                    } catch (Exception e) {
                        System.out.println(e);
                    }
                }
                if ( nested.currindex == 7 || nested.currindex == 12 || nested.currindex == 17 ) {
                    try {
                        // Get the text pane's document
                        //StyleContext context = new StyleContext();

                        DefaultStyledDocument doc = (DefaultStyledDocument) jTextPane2.getDocument();

                        System.out.println("trying to print");
                        Style style2 = doc.addStyle("StyleName",null);
                        if(flagtile==0)
                        {
                            StyleConstants.setIcon(style2, white_tile);
                            flagtile=1;
                        }
                        else
                        {
                            StyleConstants.setIcon(style2, white_tile2);
                            flagtile=0;
                        }
                 

    //StyledDocument document = new DefaultStyledDocument(context);



                        doc.insertString(doc.getEndPosition().getOffset(), "ignored text", style2);
                        jTextPane2.setStyledDocument(doc);
                    } catch (Exception e) {
                        System.out.println(e);
                    }

                }
                if (nested.currindex == 19) {
                    try {
                        // Get the text pane's document

                        DefaultStyledDocument doc = (DefaultStyledDocument) jTextPane2.getDocument();

                        //Style style = doc.addStyle("StyleName", null);

                        // Insert the image at the end of the text
                      doc.insertString(doc.getEndPosition().getOffset(),"\n",null);
jTextPane2.setStyledDocument(doc);
                    } catch (BadLocationException e) {
                    }

                }


        }
    }

    private void rPanelRefresh() {

        StyledDocument doc = jTextPane1.getStyledDocument();
//				StyledDocument blank = new DefaultStyledDocument();
        if (doc.getLength() != 0) {
            try {
                doc.remove(0, doc.getLength());
            } catch (BadLocationException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }
        }

        try {

            addStylestoDocument(doc);
            switch (progSel) {
                case 0:


                    // This code prints comments for simple loop
                    jTextArea2.setText(program.comments.toString());
                    switch (select) {
                        case 0:
                            if (code_running == false) {
                                this.initStyles = new String[disp.length];
                                System.out.println("Length is " + disp.length);
                                Arrays.fill(this.initStyles, "regular");
                            }
                            for (int i = 0; i < this.disp.length; i++) {
                                doc.insertString(doc.getLength(), this.disp[i], doc.getStyle(this.initStyles[i]));
                            }
                            break;

                        case 1:
                            if (code_running == false) {
                                this.initStyles = new String[disp2.length];
                                System.out.println("Length is " + disp2.length);
                                Arrays.fill(this.initStyles, "regular");
                            }
                            for (int i = 0; i < this.disp2.length; i++) {
                                doc.insertString(doc.getLength(), this.disp2[i], doc.getStyle(this.initStyles[i]));
                            }
                            break;
                        case 2:
                            if (code_running == false) {
                                this.initStyles = new String[disp3.length];
                                System.out.println("Length is " + disp3.length);
                                Arrays.fill(this.initStyles, "regular");
                            }
                            for (int i = 0; i < this.disp3.length; i++) {
                                doc.insertString(doc.getLength(), this.disp3[i], doc.getStyle(this.initStyles[i]));
                            }
                            break;
                        default:
                            if (code_running == false) {
                                Arrays.fill(this.initStyles, "regular");
                            }
                            for (int i = 0; i < this.disp.length; i++) {
                                doc.insertString(doc.getLength(), this.disp[i], doc.getStyle(this.initStyles[i]));
                            }
                            break;
                    }
                    break;
                case 1:
                    jTextArea2.setText(nested.comments.toString());
                    if (code_running == false) {
                        this.initStyles = new String[nestedLoop.length];
                        System.out.println("Length is " + nestedLoop.length);
                        Arrays.fill(this.initStyles, "regular");
                    }
                    for (int i = 0; i < this.nestedLoop.length; i++) {
                        doc.insertString(doc.getLength(), this.nestedLoop[i], doc.getStyle(this.initStyles[i]));
                    }
                    break;
            }

        } catch (Exception e) {
            System.out.println(e);
        }
    }

    private void addStylestoDocument(StyledDocument doc) {
        // TODO Auto-generated method stub
        Style def = StyleContext.getDefaultStyleContext().getStyle(StyleContext.DEFAULT_STYLE);
        @SuppressWarnings("unused")
        Style regular = doc.addStyle("regular", def);
        StyleConstants.setFontFamily(regular, "SansSerif");
        //StyleConstants.setLeftIndent(regular, 10f);
        //StyleConstants.setFirstLineIndent(regular,15.0f );

        Style highlight = doc.addStyle("highlight", def);
        StyleConstants.setForeground(highlight, Color.red);
        StyleConstants.setBold(highlight, true);
        //StyleConstants.setLeftIndent(highlight, 10f);

        Style indent = doc.addStyle("indent", null);
        StyleConstants.setFirstLineIndent(indent, 15.0f);

    }
    int p;
    int select = 0;
    coderunner program;
    coderunner2 nested;
    Icon asteric = new ImageIcon(getClass().getResource("/NewJApplet/resources/asteric.jpg"));

    Icon asteric2 = new ImageIcon(getClass().getResource("/NewJApplet/resources/asteric.jpg"));
    Icon white_tile = new ImageIcon(getClass().getResource("/NewJApplet/resources/White-tile-cropped.jpg"));
    Icon white_tile2 = new ImageIcon(getClass().getResource("/NewJApplet/resources/White-tile-cropped.jpg"));
    int flagtile=0;
//progSel determines the current selection --  0 for simple loops
//                                             1 for nested loops
    int progSel = 0;
    String[] disp = {"int main(){" + "\n",
        "int p;" + "\n",
        "int fact =1;" + "\n",
        "if (p==0)" + "\n",
        "{" + "\n",
        "   return fact=1;" + "\n",
        "}" + "\n",
        "for (int i=p;i>=1;i--)" + "\n",
        "{" + "\n",
        "   fact=fact*i;" + "\n",
        "}" + "\n",
        "return fact;" + "\n",
        "}"
    };
    String[] initStyles;
    String[] disp2 = {"int main(){" + "\n",
        "int p;" + "\n",
        "int fact =1;" + "\n",
        "int i=p;" + "\n",
        "if (p==0)" + "\n",
        "{" + "\n",
        "   return fact= 1;" + "\n",
        "}" + "\n",
        "while(i>=1)" + "\n",
        "{" + "\n",
        "   fact=fact*i;" + "\n",
        "   i--;" + "\n",
        "}" + "\n",
        "return fact;" + "\n",
        "}"
    };
    String[] disp3 = {"int main(){" + "\n",
        "int p;" + "\n",
        "int fact =1;" + "\n",
        "int i=p;" + "\n",
        "if (p==0)" + "\n",
        "{" + "\n",
        "   return fact=1;" + "\n",
        "}" + "\n",
        "do" + "\n",
        "{" + "\n",
        "   fact=fact*i;" + "\n",
        "   i--;" + "\n",
        "} while(i>=1);" + "\n",
        "return fact;" + "\n",
        "}"
    };
    String[] nestedLoop = {"int main(){" + "\n",
        "int i,j,k;" + "\n",
        "int height;" + "\n",
        "for (i=0;i<height;i++)" + "\n",
        "   {" + "\n",
        "   for(j=0;j<height-i-1;j++)" + "\n",
        "      {" + "\n",
        "      printf(\" \");" + "\n",
        "      }" + "\n",
        "   for(k=j;k<height-1;k++)" + "\n",
        "      {" + "\n",
        "      printf(\"*\");" + "\n",
        "      printf(\" \");" + "\n",
        "      }" + "\n",
        "      printf(\"*\");"+"\n",
        "   for(j=0;j<height-i-1;j++)" + "\n",
        "      {" + "\n",
        "      printf(\" \");" + "\n",
        "      }" + "\n",
        "   printf(\"\\n\");" + "\n",
        "   }" + "\n",
        "return 0;" + "\n",
        "}" + "\n",};
    public boolean code_running = false;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextPane jTextPane2;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    // End of variables declaration//GEN-END:variables
}
